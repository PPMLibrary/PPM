module ppm_autogenerated_global
  use ppm_module_core
  use ppm_module_user_numerics
  implicit none
  integer, parameter :: mk = ppm_kind_double
  real(mk) :: m
  real(mk) :: eps
  real(mk) :: sigma
  real(mk) :: dt
  integer :: topo = 0
  real(mk), dimension(:), pointer :: min_phys
  real(mk), dimension(:), pointer :: max_phys
  integer :: domain_decomposition
  integer :: processor_assignment
  integer :: Npart
  real(mk) :: start_time
  real(mk) :: time_step
  real(mk) :: stop_time
  contains
  subroutine define_args
    implicit none
    call arg(m, 'm', &
             default = 1.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'mass', &
             help = 'mass of particles')
    call arg(eps, 'eps', &
             default = 1.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'epsilon', &
             help = 'Potential well depth')
    call arg(sigma, 'sigma', &
             default = 1.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'sigma', &
             help = 'distance of potential well')
    call arg(dt, 'dt', &
             default = 1.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'delta_t', &
             help = 'time step')
    call arg_group('Domain Parameters')
    allocate(min_phys(3))
    call arg(min_phys, 'min_phys', &
             default = (/0.0_mk, 0.0_mk, 0.0_mk/), &
             ctrl_name = 'min_phys', &
             long_flag = 'min_phys', &
             help = 'lower domain boundary')
    allocate(max_phys(3))
    call arg(max_phys, 'max_phys', &
             default = (/1.0_mk, 1.0_mk, 1.0_mk/), &
             ctrl_name = 'max_phys', &
             long_flag = 'max_phys', &
             help = 'upper domain boundary')
    call arg(domain_decomposition, 'domain_decomposition', &
             default = ppm_param_decomp_cuboid, &
             min = 1, &
             max = 13, &
             ctrl_name = 'domain_decomposition', &
             help = 'Domain decomposition, one of:\n * 1 - tree\n * 2 - pruned cell\n * 3 - bisection\n * 4 - x pencil\n * 5 - y pencil\n * 6 - z pencil\n * 7 - cuboid\n * 8 - user defined\n * 10 - xy slab\n * 11 - xz slab\n * 12 - yz slab\n * 13 - cartesian')
    call arg(processor_assignment, 'processor_assignment', &
             default = ppm_param_assign_internal, &
             min = 1, &
             max = 6, &
             ctrl_name = 'processor_assignment', &
             help = 'Processor assignment, one of:\n * 1 - internal\nmetis:\n   * 2 - nodal cut\n   * 3 - nodal comm\n   * 4 - dual cut\n   * 5 - dual comm\n * 6 - user defined')
    call arg(Npart, 'Npart', &
             default = 10000, &
             ctrl_name = 'Npart', &
             long_flag = 'npart', &
             help = 'Global number of particles')
    call arg_group('Time Parameters')
    call arg(start_time, 'start_time', &
             default = 0.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'start_time', &
             help = 'Start time')
    call arg(time_step, 'time_step', &
             default = 0.1_mk, &
             min = 0.0_mk, &
             ctrl_name = 'time_step', &
             help = 'Time step')
    call arg(stop_time, 'stop_time', &
             default = 1.0_mk, &
             min = 0.0_mk, &
             ctrl_name = 'stop_time', &
             help = 'End time')
  end subroutine define_args
  
end module ppm_autogenerated_global
